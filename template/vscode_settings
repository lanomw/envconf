{
	/************** 自动保存 ******************/
    "files.autoSave": "afterDelay",
	"files.autoSaveDelay": 200,

	/************** 行号和标尺 ******************/
	"editor.lineNumbers": "on", // "off", "relative"
    "editor.rulers": [80, 120],

	/************** 缩进和换行 ******************/
	"editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    // "editor.wordWrap": "on",

	/************** 外观 ******************/
	"editor.renderControlCharacters": true, /* 是否显示控制字符：启用*/
	"editor.renderWhitespace": "all", /* 显示 4 个空格是.... */
	"editor.fontSize": 16, /* 代码字体大小*/
	"editor.fontFamily": "'JetBrainsMono Nerd Font', Monaco, 'Courier New', monospace",
    "window.titleBarStyle": "custom",
    "workbench.startupEditor": "none",
    "workbench.sideBar.location": "right",
    "workbench.colorTheme": "Dracula Theme",
    "workbench.activityBar.location": "bottom",

	/************** 文件空行 ******************/
    // "files.trimTrailingWhitespace": true,
    // "files.insertFinalNewline": true,
    // "files.trimFinalNewlines": true,

	/************** 搜索 ******************/
    "search.useIgnoreFiles": false, // 搜索时是否应用.gitignore文件和.ignore目录
    "search.showLineNumbers": true, // 显示搜索结果所在行号
    "search.smartCase": true, // 当搜索词为小写时，则不区分大小写进行搜索，否则区分大小写
    "search.exclude": { // 配置在搜索中排除的文件和文件夹的glob模式
        "build/": true,
        ".map": true,
        ".o": true
    },

	/************** KeilAssistant ******************/
    "KeilAssistant.MDK.Uv4Path": "D:/Keil_v5/UV4/UV4.exe",
    "KeilAssistant.C51.Uv4Path": "D:/Keil_v5/UV4/UV4.exe",

	/************** format ******************/
    "clang-format.assumeFilename": "~/.clang-format",
    "[c]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },

	/************** clangd ******************/
    /**
     * 需禁用c/c++插件，compile_commands.json推荐软连接或放在根目录下，方便clangd搜索
     * 生成compile_commands.json
     * 方案1: bear -- make
     * 方案2: CMakeLists.txt 添加 set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
     * 方案3: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON */
    "clangd.arguments": [
        "--header-insertion=never",
        "--completion-style=detailed",
    ],

	/************** makefile ******************/
    "makefile.configureOnOpen": true,

	/************** 其它 ******************/
    "git.openRepositoryInParentFolders": "always",
    "git.suggestSmartCommit": false,
    "git.confirmSync": false,
    "explorer.autoReveal": false,
    "chat.commandCenter.enabled": false,
    "files.exclude": {
        "out": true,
        "build": true,
        "prebuilts": true
    },
}
